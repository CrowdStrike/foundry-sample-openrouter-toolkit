const t=[];for(let e=0;e<256;++e)t.push((e+256).toString(16).slice(1));let e;const s=new Uint8Array(16);var i={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};function a(a,o,n){if(i.randomUUID&&!a)return i.randomUUID();const r=(a=a||{}).random??a.rng?.()??(()=>{if(!e){if("undefined"==typeof crypto||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");e=crypto.getRandomValues.bind(crypto)}return e(s)})();if(r.length<16)throw new Error("Random bytes length must be >= 16");return r[6]=15&r[6]|64,r[8]=63&r[8]|128,((e,s=0)=>(t[e[s+0]]+t[e[s+1]]+t[e[s+2]]+t[e[s+3]]+"-"+t[e[s+4]]+t[e[s+5]]+"-"+t[e[s+6]]+t[e[s+7]]+"-"+t[e[s+8]]+t[e[s+9]]+"-"+t[e[s+10]]+t[e[s+11]]+t[e[s+12]]+t[e[s+13]]+t[e[s+14]]+t[e[s+15]]).toLowerCase())(r)}const o="current";function n(t){if(!t.isConnected)throw new Error("You cannot call this API before having established a connection to the host!")}class r{onDataUpdate;onBroadcast;onLivereload;pendingMessages=new Map;targetOrigin="*";constructor({onDataUpdate:t,onBroadcast:e,onLivereload:s}={}){this.onDataUpdate=t,this.onBroadcast=e,this.onLivereload=s,window.addEventListener("message",this.handleMessageWrapper)}destroy(){window.removeEventListener("message",this.handleMessageWrapper)}setOrigin(t){this.targetOrigin=t}sendUnidirectionalMessage(t){const e={message:t,meta:{messageId:a(),version:o}};window.parent.postMessage(e,this.targetOrigin)}async postMessage(t){return new Promise((e,s)=>{const i=a();let n;const r=(t=>"connect"===t.type?5e3:"api"===t.type?3e4:"navigateTo"===t.type?5e3:null)(t);null!==r&&(n=setTimeout(()=>{s(new Error(`Waiting for response from foundry host for "${t.type}" message (ID: ${i}) timed out after ${r}ms`))},r)),this.pendingMessages.set(i,t=>{n&&clearTimeout(n),e(t)});const p={message:t,meta:{messageId:i,version:o}};window.parent.postMessage(p,this.targetOrigin)})}handleMessageWrapper=t=>this.handleMessage(t);handleMessage=t=>{if(!(t=>!!t?.data?.meta?.messageId)(t))return;const{message:e}=t.data;if("data"===e.type)return void this.onDataUpdate?.(e);if("broadcast"===e.type)return void this.onBroadcast?.(e);if("livereload"===e.type)return void this.onLivereload?.(e);const{messageId:s}=t.data.meta,i=this.pendingMessages.get(s);i?(this.pendingMessages.delete(s),i(e.payload)):this.throwError("Received unexpected message")};throwError(t){throw new Error(t)}}function p(t,e,s,i){var a,o=arguments.length,n=o<3?e:null===i?i=Object.getOwnPropertyDescriptor(e,s):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(t,e,s,i);else for(var r=t.length-1;r>=0;r--)(a=t[r])&&(n=(o<3?a(n):o>3?a(e,s,n):a(e,s))||n);return o>3&&n&&Object.defineProperty(e,s,n),n}"function"==typeof SuppressedError&&SuppressedError;const c=new WeakMap,d=new WeakMap,y=new WeakMap,h=Symbol("anyProducer"),u=Promise.resolve(),l=Symbol("listenerAdded"),g=Symbol("listenerRemoved");let m=0,V=0;const f=t=>"string"==typeof t||"symbol"==typeof t||"number"==typeof t;function b(t){if(!f(t))throw new TypeError("`eventName` must be a string, symbol, or number")}function E(t){if("function"!=typeof t)throw new TypeError("listener must be a function")}function w(t,e){const s=d.get(t);if(s.has(e))return s.get(e)}function v(t,e){const s=f(e)?e:h,i=y.get(t);if(i.has(s))return i.get(s)}function A(t,e){e=Array.isArray(e)?e:[e];let s=0,i=()=>{},a=[];const o={enqueue(t){a.push(t),i()},finish(){s=1,i()}};for(const s of e){let e=v(t,s);e||(e=new Set,y.get(t).set(s,e)),e.add(o)}return{async next(){return a?0===a.length?s?(a=void 0,this.next()):(await new Promise(t=>{i=t}),this.next()):{done:0,value:await a.shift()}:{done:1}},async return(s){a=void 0;for(const s of e){const e=v(t,s);e&&(e.delete(o),0===e.size)&&y.get(t).delete(s)}return i(),arguments.length>0?{done:1,value:await s}:{done:1}},[Symbol.asyncIterator](){return this}}}function C(t){if(void 0===t)return R;if(!Array.isArray(t))throw new TypeError("`methodNames` must be an array of strings");for(const e of t)if(!R.includes(e)){if("string"!=typeof e)throw new TypeError("`methodNames` element must be a string");throw new Error(`${e} is not Emittery method`)}return t}const G=t=>t===l||t===g;function S(t,e,s){if(G(e))try{m=1,t.emit(e,s)}finally{m=0}}class D{static mixin(t,e){return e=C(e),s=>{if("function"!=typeof s)throw new TypeError("`target` must be function");for(const t of e)if(void 0!==s.prototype[t])throw new Error(`The property \`${t}\` already exists on \`target\``);Object.defineProperty(s.prototype,t,{enumerable:0,get(){return Object.defineProperty(this,t,{enumerable:0,value:new D}),this[t]}});const i=e=>function(...s){return this[t][e](...s)};for(const t of e)Object.defineProperty(s.prototype,t,{enumerable:0,value:i(t)});return s}}static get isDebugEnabled(){if("object"!=typeof globalThis.process?.env)return V;const{env:t}=globalThis.process??{env:{}};return"emittery"===t.DEBUG||"*"===t.DEBUG||V}static set isDebugEnabled(t){V=t}constructor(t={}){c.set(this,new Set),d.set(this,new Map),y.set(this,new Map),y.get(this).set(h,new Set),this.debug=t.debug??{},void 0===this.debug.enabled&&(this.debug.enabled=0),this.debug.logger||(this.debug.logger=(t,e,s,i)=>{try{i=JSON.stringify(i)}catch{i=`Object with the following keys failed to stringify: ${Object.keys(i).join(",")}`}"symbol"!=typeof s&&"number"!=typeof s||(s=s.toString());const a=new Date;a.getHours(),a.getMinutes(),a.getSeconds(),a.getMilliseconds()})}logIfDebugEnabled(t,e,s){(D.isDebugEnabled||this.debug.enabled)&&this.debug.logger(t,this.debug.name,e,s)}on(t,e,{signal:s}={}){E(e),t=Array.isArray(t)?t:[t];for(const s of t){b(s);let t=w(this,s);t||(t=new Set,d.get(this).set(s,t)),t.add(e),this.logIfDebugEnabled("subscribe",s,void 0),G(s)||S(this,l,{eventName:s,listener:e})}const i=()=>{this.off(t,e),s?.removeEventListener("abort",i)};return s?.addEventListener("abort",i,{once:1}),s?.aborted&&i(),i}off(t,e){E(e),t=Array.isArray(t)?t:[t];for(const s of t){b(s);const t=w(this,s);t&&(t.delete(e),0===t.size)&&d.get(this).delete(s),this.logIfDebugEnabled("unsubscribe",s,void 0),G(s)||S(this,g,{eventName:s,listener:e})}}once(t,e){if(void 0!==e&&"function"!=typeof e)throw new TypeError("predicate must be a function");let s;const i=new Promise(i=>{s=this.on(t,t=>{e&&!e(t)||(s(),i(t))})});return i.off=s,i}events(t){t=Array.isArray(t)?t:[t];for(const e of t)b(e);return A(this,t)}async emit(t,e){if(b(t),G(t)&&!m)throw new TypeError("`eventName` cannot be meta event `listenerAdded` or `listenerRemoved`");this.logIfDebugEnabled("emit",t,e),((t,e,s)=>{const i=y.get(t);if(i.has(e))for(const t of i.get(e))t.enqueue(s);if(i.has(h)){const t=Promise.all([e,s]);for(const e of i.get(h))e.enqueue(t)}})(this,t,e);const s=w(this,t)??new Set,i=c.get(this),a=[...s],o=G(t)?[]:[...i];await u,await Promise.all([...a.map(async t=>{if(s.has(t))return t(e)}),...o.map(async s=>{if(i.has(s))return s(t,e)})])}async emitSerial(t,e){if(b(t),G(t)&&!m)throw new TypeError("`eventName` cannot be meta event `listenerAdded` or `listenerRemoved`");this.logIfDebugEnabled("emitSerial",t,e);const s=w(this,t)??new Set,i=c.get(this),a=[...s],o=[...i];await u;for(const t of a)s.has(t)&&await t(e);for(const s of o)i.has(s)&&await s(t,e)}onAny(t,{signal:e}={}){E(t),this.logIfDebugEnabled("subscribeAny",void 0,void 0),c.get(this).add(t),S(this,l,{listener:t});const s=()=>{this.offAny(t),e?.removeEventListener("abort",s)};return e?.addEventListener("abort",s,{once:1}),e?.aborted&&s(),s}anyEvent(){return A(this)}offAny(t){E(t),this.logIfDebugEnabled("unsubscribeAny",void 0,void 0),S(this,g,{listener:t}),c.get(this).delete(t)}clearListeners(t){t=Array.isArray(t)?t:[t];for(const e of t)if(this.logIfDebugEnabled("clear",e,void 0),f(e)){const t=w(this,e);t&&t.clear();const s=v(this,e);if(s){for(const t of s)t.finish();s.clear()}}else{c.get(this).clear();for(const[t,e]of d.get(this).entries())e.clear(),d.get(this).delete(t);for(const[t,e]of y.get(this).entries()){for(const t of e)t.finish();e.clear(),y.get(this).delete(t)}}}listenerCount(t){t=Array.isArray(t)?t:[t];let e=0;for(const s of t)if(f(s))e+=c.get(this).size+(w(this,s)?.size??0)+(v(this,s)?.size??0)+(v(this)?.size??0);else{void 0!==s&&b(s),e+=c.get(this).size;for(const t of d.get(this).values())e+=t.size;for(const t of y.get(this).values())e+=t.size}return e}bindMethods(t,e){if("object"!=typeof t||null===t)throw new TypeError("`target` must be an object");e=C(e);for(const s of e){if(void 0!==t[s])throw new Error(`The property \`${s}\` already exists on \`target\``);Object.defineProperty(t,s,{enumerable:0,value:this[s].bind(this)})}}}const R=Object.getOwnPropertyNames(D.prototype).filter(t=>"constructor"!==t);function j(t){let e,s,i;return e=t,(t,a,o)=>{if(null!=o.value)o.value=P(o.value,e,s,i);else{if(null==o.get)throw"Only put a Memoize() decorator on a method or get accessor.";o.get=P(o.get,e,s,i)}}}Object.defineProperty(D,"listenerAdded",{value:l,writable:0,enumerable:1,configurable:0}),Object.defineProperty(D,"listenerRemoved",{value:g,writable:0,enumerable:1,configurable:0});const Q=new Map;function P(t,e,s=0,i){const a=Symbol("__memoized_map__");return function(...o){let n;this.hasOwnProperty(a)||Object.defineProperty(this,a,{configurable:0,enumerable:0,writable:0,value:new Map});let r=this[a];if(Array.isArray(i))for(const t of i)Q.has(t)?Q.get(t).push(r):Q.set(t,[r]);if(e||o.length>0||s>0){let i;i=1==e?o.map(t=>t.toString()).join("!"):e?e.apply(this,o):o[0];const a=`${i}__timestamp`;let p=0;if(s>0)if(r.has(a)){let t=r.get(a);p=Date.now()-t>s}else p=1;r.has(i)&&!p?n=r.get(i):(n=t.apply(this,o),r.set(i,n),s>0&&r.set(a,Date.now()))}else{const e=this;r.has(e)?n=r.get(e):(n=t.apply(this,o),r.set(e,n))}return n}}class B{bridge;constructor(t){this.bridge=t}getBridge(){return this.bridge}async deleteEntitiesSuppressedDevicesV1(t={}){const e={type:"api",api:"alerts",method:"deleteEntitiesSuppressedDevicesV1",payload:{params:t}};return this.bridge.postMessage(e)}async getQueriesAlertsV1(t={}){const e={type:"api",api:"alerts",method:"getQueriesAlertsV1",payload:{params:t}};return this.bridge.postMessage(e)}async getQueriesAlertsV2(t={}){const e={type:"api",api:"alerts",method:"getQueriesAlertsV2",payload:{params:t}};return this.bridge.postMessage(e)}async patchCombinedAlertsV2(t,e={}){const s={type:"api",api:"alerts",method:"patchCombinedAlertsV2",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async patchCombinedAlertsV3(t,e={}){const s={type:"api",api:"alerts",method:"patchCombinedAlertsV3",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async patchEntitiesAlertsV2(t,e={}){const s={type:"api",api:"alerts",method:"patchEntitiesAlertsV2",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async patchEntitiesAlertsV3(t,e={}){const s={type:"api",api:"alerts",method:"patchEntitiesAlertsV3",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async patchEntitiesSuppressedDevicesV1(t,e={}){const s={type:"api",api:"alerts",method:"patchEntitiesSuppressedDevicesV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async postAggregatesAlertsV1(t,e={}){const s={type:"api",api:"alerts",method:"postAggregatesAlertsV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async postAggregatesAlertsV2(t,e={}){const s={type:"api",api:"alerts",method:"postAggregatesAlertsV2",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async postEntitiesAlertsV1(t,e={}){const s={type:"api",api:"alerts",method:"postEntitiesAlertsV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async postEntitiesAlertsV2(t,e={}){const s={type:"api",api:"alerts",method:"postEntitiesAlertsV2",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async postEntitiesSuppressedDevicesV1(t,e={}){const s={type:"api",api:"alerts",method:"postEntitiesSuppressedDevicesV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}}class N{bridge;constructor(t){this.bridge=t}getBridge(){return this.bridge}async getAggregatesResourcesCountByManagedByV1(t={}){const e={type:"api",api:"cloudSecurityAssets",method:"getAggregatesResourcesCountByManagedByV1",payload:{params:t}};return this.bridge.postMessage(e)}}class O{bridge;constructor(t){this.bridge=t}getBridge(){return this.bridge}async getCloudSecurityRegistrationAwsCombinedAccountsV1(t={}){const e={type:"api",api:"cloudregistration",method:"getCloudSecurityRegistrationAwsCombinedAccountsV1",payload:{params:t}};return this.bridge.postMessage(e)}}class k{bridge;constructor(t){this.bridge=t}getBridge(){return this.bridge}async getAggregatesClustersCountV1(t={}){const e={type:"api",api:"containerSecurity",method:"getAggregatesClustersCountV1",payload:{params:t}};return this.bridge.postMessage(e)}async getAggregatesContainersCountV1(t={}){const e={type:"api",api:"containerSecurity",method:"getAggregatesContainersCountV1",payload:{params:t}};return this.bridge.postMessage(e)}async getAggregatesContainersGroupByManagedV1(t={}){const e={type:"api",api:"containerSecurity",method:"getAggregatesContainersGroupByManagedV1",payload:{params:t}};return this.bridge.postMessage(e)}async getAggregatesContainersSensorCoverageV1(t={}){const e={type:"api",api:"containerSecurity",method:"getAggregatesContainersSensorCoverageV1",payload:{params:t}};return this.bridge.postMessage(e)}async getAggregatesImagesCountByStateV1(t={}){const e={type:"api",api:"containerSecurity",method:"getAggregatesImagesCountByStateV1",payload:{params:t}};return this.bridge.postMessage(e)}async getAggregatesNodesCountV1(t={}){const e={type:"api",api:"containerSecurity",method:"getAggregatesNodesCountV1",payload:{params:t}};return this.bridge.postMessage(e)}async getAggregatesPodsCountV1(t={}){const e={type:"api",api:"containerSecurity",method:"getAggregatesPodsCountV1",payload:{params:t}};return this.bridge.postMessage(e)}async getAggregatesUnidentifiedContainersCountV1(t={}){const e={type:"api",api:"containerSecurity",method:"getAggregatesUnidentifiedContainersCountV1",payload:{params:t}};return this.bridge.postMessage(e)}async getCombinedClustersV1(t={}){const e={type:"api",api:"containerSecurity",method:"getCombinedClustersV1",payload:{params:t}};return this.bridge.postMessage(e)}}class T{bridge;constructor(t){this.bridge=t}getBridge(){return this.bridge}async getCspmregistrationCloudConnectCspmAzureCombinedAccountsV1(t={}){const e={type:"api",api:"cspmRegistration",method:"getCspmregistrationCloudConnectCspmAzureCombinedAccountsV1",payload:{params:t}};return this.bridge.postMessage(e)}async getCspmregistrationCloudConnectCspmGcpCombinedAccountsV1(t={}){const e={type:"api",api:"cspmRegistration",method:"getCspmregistrationCloudConnectCspmGcpCombinedAccountsV1",payload:{params:t}};return this.bridge.postMessage(e)}}class M{bridge;constructor(t){this.bridge=t}getBridge(){return this.bridge}async deleteV1CollectionsCollectionNameObjectsObjectKey(t={}){const e={type:"api",api:"customobjects",method:"deleteV1CollectionsCollectionNameObjectsObjectKey",payload:{params:t}};return this.bridge.postMessage(e)}async getV1Collections(t={}){const e={type:"api",api:"customobjects",method:"getV1Collections",payload:{params:t}};return this.bridge.postMessage(e)}async getV1CollectionsCollectionNameObjects(t={}){const e={type:"api",api:"customobjects",method:"getV1CollectionsCollectionNameObjects",payload:{params:t}};return this.bridge.postMessage(e)}async getV1CollectionsCollectionNameObjectsObjectKey(t={}){const e={type:"api",api:"customobjects",method:"getV1CollectionsCollectionNameObjectsObjectKey",payload:{params:t}};return this.bridge.postMessage(e)}async getV1CollectionsCollectionNameObjectsObjectKeyMetadata(t={}){const e={type:"api",api:"customobjects",method:"getV1CollectionsCollectionNameObjectsObjectKeyMetadata",payload:{params:t}};return this.bridge.postMessage(e)}async postV1CollectionsCollectionNameObjects(t,e={}){const s={type:"api",api:"customobjects",method:"postV1CollectionsCollectionNameObjects",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async putV1CollectionsCollectionNameObjectsObjectKey(t,e={}){const s={type:"api",api:"customobjects",method:"putV1CollectionsCollectionNameObjectsObjectKey",payload:{body:t,params:e}};return this.bridge.postMessage(s)}}class x{bridge;constructor(t){this.bridge=t}getBridge(){return this.bridge}async getEntitiesSuppressedDevicesV1(t={}){const e={type:"api",api:"detects",method:"getEntitiesSuppressedDevicesV1",payload:{params:t}};return this.bridge.postMessage(e)}async patchEntitiesDetectsV2(t,e={}){const s={type:"api",api:"detects",method:"patchEntitiesDetectsV2",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async patchQueriesDetectsV1(t,e={}){const s={type:"api",api:"detects",method:"patchQueriesDetectsV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async patchQueriesDetectsV2(t,e={}){const s={type:"api",api:"detects",method:"patchQueriesDetectsV2",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async postAggregatesDetectsGetV1(t,e={}){const s={type:"api",api:"detects",method:"postAggregatesDetectsGetV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async postEntitiesSummariesGetV1(t,e={}){const s={type:"api",api:"detects",method:"postEntitiesSummariesGetV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async postEntitiesSuppressedDevicesV1(t,e={}){const s={type:"api",api:"detects",method:"postEntitiesSuppressedDevicesV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}}class F{bridge;constructor(t){this.bridge=t}getBridge(){return this.bridge}async deleteEntitiesGroupsV1(t){const e={type:"api",api:"devices",method:"deleteEntitiesGroupsV1",payload:{params:t}};return this.bridge.postMessage(e)}async getAggregatesBucketsV1(t){const e={type:"api",api:"devices",method:"getAggregatesBucketsV1",payload:{params:t}};return this.bridge.postMessage(e)}async getAggregatesFgaTagPrefixCountsV1(t){const e={type:"api",api:"devices",method:"getAggregatesFgaTagPrefixCountsV1",payload:{params:t}};return this.bridge.postMessage(e)}async getAggregatesTagPrefixCountsV1(t){const e={type:"api",api:"devices",method:"getAggregatesTagPrefixCountsV1",payload:{params:t}};return this.bridge.postMessage(e)}async getEntitiesDevicesV1(t){const e={type:"api",api:"devices",method:"getEntitiesDevicesV1",payload:{params:t}};return this.bridge.postMessage(e)}async getEntitiesFgaGroupsV1(t){const e={type:"api",api:"devices",method:"getEntitiesFgaGroupsV1",payload:{params:t}};return this.bridge.postMessage(e)}async getEntitiesGroupsV1(t){const e={type:"api",api:"devices",method:"getEntitiesGroupsV1",payload:{params:t}};return this.bridge.postMessage(e)}async getQueriesAvailableGroupsV1(t={}){const e={type:"api",api:"devices",method:"getQueriesAvailableGroupsV1",payload:{params:t}};return this.bridge.postMessage(e)}async getQueriesDevicesHiddenV2(t={}){const e={type:"api",api:"devices",method:"getQueriesDevicesHiddenV2",payload:{params:t}};return this.bridge.postMessage(e)}async getQueriesDevicesV1(t={}){const e={type:"api",api:"devices",method:"getQueriesDevicesV1",payload:{params:t}};return this.bridge.postMessage(e)}async getQueriesDevicesV2(t={}){const e={type:"api",api:"devices",method:"getQueriesDevicesV2",payload:{params:t}};return this.bridge.postMessage(e)}async getQueriesFgaGroupsV1(t={}){const e={type:"api",api:"devices",method:"getQueriesFgaGroupsV1",payload:{params:t}};return this.bridge.postMessage(e)}async getQueriesGroupsV1(t={}){const e={type:"api",api:"devices",method:"getQueriesGroupsV1",payload:{params:t}};return this.bridge.postMessage(e)}async patchEntitiesDevicesTagsV2(t,e={}){const s={type:"api",api:"devices",method:"patchEntitiesDevicesTagsV2",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async patchEntitiesDevicesV1(t,e){const s={type:"api",api:"devices",method:"patchEntitiesDevicesV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async patchEntitiesGroupsV1(t,e={}){const s={type:"api",api:"devices",method:"patchEntitiesGroupsV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async postAggregatesDevicesGetV1(t,e={}){const s={type:"api",api:"devices",method:"postAggregatesDevicesGetV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async postAggregatesFgaHostsGetV1(t,e={}){const s={type:"api",api:"devices",method:"postAggregatesFgaHostsGetV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async postCombinedDevicesLoginHistoryV1(t,e={}){const s={type:"api",api:"devices",method:"postCombinedDevicesLoginHistoryV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async postCombinedFgaHostsLoginHistoryV1(t,e={}){const s={type:"api",api:"devices",method:"postCombinedFgaHostsLoginHistoryV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async postEntitiesDevicesActionsV4(t,e={}){const s={type:"api",api:"devices",method:"postEntitiesDevicesActionsV4",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async postEntitiesDevicesHiddenActionsV4(t,e={}){const s={type:"api",api:"devices",method:"postEntitiesDevicesHiddenActionsV4",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async postEntitiesDevicesReportsV1(t,e={}){const s={type:"api",api:"devices",method:"postEntitiesDevicesReportsV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async postEntitiesDevicesV1(t,e){const s={type:"api",api:"devices",method:"postEntitiesDevicesV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async postEntitiesDevicesV2(t,e={}){const s={type:"api",api:"devices",method:"postEntitiesDevicesV2",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async postEntitiesFgaHostsReportsV1(t,e={}){const s={type:"api",api:"devices",method:"postEntitiesFgaHostsReportsV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async postEntitiesFgaHostsV1(t,e={}){const s={type:"api",api:"devices",method:"postEntitiesFgaHostsV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async postEntitiesGroupActionsV1(t,e){const s={type:"api",api:"devices",method:"postEntitiesGroupActionsV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async postEntitiesGroupsV1(t,e={}){const s={type:"api",api:"devices",method:"postEntitiesGroupsV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}}class L{bridge;constructor(t){this.bridge=t}getBridge(){return this.bridge}async getEntitiesExecutionV1(t){const e={type:"api",api:"faasGateway",method:"getEntitiesExecutionV1",payload:{params:t}};return this.bridge.postMessage(e)}async postEntitiesExecutionV1(t,e={}){const s={type:"api",api:"faasGateway",method:"postEntitiesExecutionV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}}class I{bridge;constructor(t){this.bridge=t}getBridge(){return this.bridge}async deleteEntitiesNetworkLocationsV1(t){const e={type:"api",api:"fwmgr",method:"deleteEntitiesNetworkLocationsV1",payload:{params:t}};return this.bridge.postMessage(e)}async deleteEntitiesPoliciesV1(t){const e={type:"api",api:"fwmgr",method:"deleteEntitiesPoliciesV1",payload:{params:t}};return this.bridge.postMessage(e)}async deleteEntitiesRuleGroupsV1(t){const e={type:"api",api:"fwmgr",method:"deleteEntitiesRuleGroupsV1",payload:{params:t}};return this.bridge.postMessage(e)}async getEntitiesEventsV1(t){const e={type:"api",api:"fwmgr",method:"getEntitiesEventsV1",payload:{params:t}};return this.bridge.postMessage(e)}async getEntitiesFirewallFieldsV1(t){const e={type:"api",api:"fwmgr",method:"getEntitiesFirewallFieldsV1",payload:{params:t}};return this.bridge.postMessage(e)}async getEntitiesNetworkLocationsDetailsV1(t){const e={type:"api",api:"fwmgr",method:"getEntitiesNetworkLocationsDetailsV1",payload:{params:t}};return this.bridge.postMessage(e)}async getEntitiesNetworkLocationsV1(t){const e={type:"api",api:"fwmgr",method:"getEntitiesNetworkLocationsV1",payload:{params:t}};return this.bridge.postMessage(e)}async getEntitiesPlatformsV1(t){const e={type:"api",api:"fwmgr",method:"getEntitiesPlatformsV1",payload:{params:t}};return this.bridge.postMessage(e)}async getEntitiesPoliciesV1(t){const e={type:"api",api:"fwmgr",method:"getEntitiesPoliciesV1",payload:{params:t}};return this.bridge.postMessage(e)}async getEntitiesRuleGroupsV1(t){const e={type:"api",api:"fwmgr",method:"getEntitiesRuleGroupsV1",payload:{params:t}};return this.bridge.postMessage(e)}async getEntitiesRulesV1(t){const e={type:"api",api:"fwmgr",method:"getEntitiesRulesV1",payload:{params:t}};return this.bridge.postMessage(e)}async getLibraryEntitiesRuleGroupsV1(t){const e={type:"api",api:"fwmgr",method:"getLibraryEntitiesRuleGroupsV1",payload:{params:t}};return this.bridge.postMessage(e)}async getLibraryQueriesRuleGroupsV1(t={}){const e={type:"api",api:"fwmgr",method:"getLibraryQueriesRuleGroupsV1",payload:{params:t}};return this.bridge.postMessage(e)}async getQueriesEventsV1(t={}){const e={type:"api",api:"fwmgr",method:"getQueriesEventsV1",payload:{params:t}};return this.bridge.postMessage(e)}async getQueriesFirewallFieldsV1(t={}){const e={type:"api",api:"fwmgr",method:"getQueriesFirewallFieldsV1",payload:{params:t}};return this.bridge.postMessage(e)}async getQueriesNetworkLocationsV1(t={}){const e={type:"api",api:"fwmgr",method:"getQueriesNetworkLocationsV1",payload:{params:t}};return this.bridge.postMessage(e)}async getQueriesPlatformsV1(t={}){const e={type:"api",api:"fwmgr",method:"getQueriesPlatformsV1",payload:{params:t}};return this.bridge.postMessage(e)}async getQueriesPolicyRulesV1(t={}){const e={type:"api",api:"fwmgr",method:"getQueriesPolicyRulesV1",payload:{params:t}};return this.bridge.postMessage(e)}async getQueriesRuleGroupsV1(t={}){const e={type:"api",api:"fwmgr",method:"getQueriesRuleGroupsV1",payload:{params:t}};return this.bridge.postMessage(e)}async getQueriesRulesV1(t={}){const e={type:"api",api:"fwmgr",method:"getQueriesRulesV1",payload:{params:t}};return this.bridge.postMessage(e)}async patchEntitiesNetworkLocationsV1(t,e={}){const s={type:"api",api:"fwmgr",method:"patchEntitiesNetworkLocationsV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async patchEntitiesRuleGroupsV1(t,e={}){const s={type:"api",api:"fwmgr",method:"patchEntitiesRuleGroupsV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async postAggregatesEventsGetV1(t,e={}){const s={type:"api",api:"fwmgr",method:"postAggregatesEventsGetV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async postAggregatesPolicyRulesGetV1(t,e={}){const s={type:"api",api:"fwmgr",method:"postAggregatesPolicyRulesGetV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async postAggregatesRuleGroupsGetV1(t,e={}){const s={type:"api",api:"fwmgr",method:"postAggregatesRuleGroupsGetV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async postAggregatesRulesGetV1(t,e={}){const s={type:"api",api:"fwmgr",method:"postAggregatesRulesGetV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async postEntitiesNetworkLocationsMetadataV1(t,e={}){const s={type:"api",api:"fwmgr",method:"postEntitiesNetworkLocationsMetadataV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async postEntitiesNetworkLocationsPrecedenceV1(t,e={}){const s={type:"api",api:"fwmgr",method:"postEntitiesNetworkLocationsPrecedenceV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async postEntitiesNetworkLocationsV1(t,e={}){const s={type:"api",api:"fwmgr",method:"postEntitiesNetworkLocationsV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async postEntitiesOntologyV1(t,e={}){const s={type:"api",api:"fwmgr",method:"postEntitiesOntologyV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async postEntitiesRuleGroupsV1(t,e={}){const s={type:"api",api:"fwmgr",method:"postEntitiesRuleGroupsV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async postEntitiesRulesValidateFilepathV1(t,e={}){const s={type:"api",api:"fwmgr",method:"postEntitiesRulesValidateFilepathV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async putEntitiesNetworkLocationsV1(t,e={}){const s={type:"api",api:"fwmgr",method:"putEntitiesNetworkLocationsV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async putEntitiesPoliciesV2(t,e={}){const s={type:"api",api:"fwmgr",method:"putEntitiesPoliciesV2",payload:{body:t,params:e}};return this.bridge.postMessage(s)}}class K{bridge;constructor(t){this.bridge=t}getBridge(){return this.bridge}async getCombinedCrowdscoresV1(t={}){const e={type:"api",api:"incidents",method:"getCombinedCrowdscoresV1",payload:{params:t}};return this.bridge.postMessage(e)}async getQueriesBehaviorsV1(t={}){const e={type:"api",api:"incidents",method:"getQueriesBehaviorsV1",payload:{params:t}};return this.bridge.postMessage(e)}async getQueriesIncidentsV1(t={}){const e={type:"api",api:"incidents",method:"getQueriesIncidentsV1",payload:{params:t}};return this.bridge.postMessage(e)}async postAggregatesBehaviorsGetV1(t,e={}){const s={type:"api",api:"incidents",method:"postAggregatesBehaviorsGetV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async postAggregatesIncidentsGetV1(t,e={}){const s={type:"api",api:"incidents",method:"postAggregatesIncidentsGetV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async postEntitiesBehaviorsGetV1(t,e={}){const s={type:"api",api:"incidents",method:"postEntitiesBehaviorsGetV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async postEntitiesIncidentActionsV1(t,e={}){const s={type:"api",api:"incidents",method:"postEntitiesIncidentActionsV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async postEntitiesIncidentsGetV1(t,e={}){const s={type:"api",api:"incidents",method:"postEntitiesIncidentsGetV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}}class H{bridge;constructor(t){this.bridge=t}getBridge(){return this.bridge}async getEntitiesSavedSearchesExecuteV1(t){const e={type:"api",api:"loggingapi",method:"getEntitiesSavedSearchesExecuteV1",payload:{params:t}};return this.bridge.postMessage(e)}async getEntitiesSavedSearchesV1(t){const e={type:"api",api:"loggingapi",method:"getEntitiesSavedSearchesV1",payload:{params:t}};return this.bridge.postMessage(e)}async postEntitiesSavedSearchesExecuteV1(t,e={}){const s={type:"api",api:"loggingapi",method:"postEntitiesSavedSearchesExecuteV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}}class U{bridge;constructor(t){this.bridge=t}getBridge(){return this.bridge}async getIntelMitreEntitiesMatrixV1(t={}){const e={type:"api",api:"mitre",method:"getIntelMitreEntitiesMatrixV1",payload:{params:t}};return this.bridge.postMessage(e)}}class _{bridge;constructor(t){this.bridge=t}getBridge(){return this.bridge}async getEntitiesConfigsV1(t={}){const e={type:"api",api:"plugins",method:"getEntitiesConfigsV1",payload:{params:t}};return this.bridge.postMessage(e)}async getEntitiesDefinitionsV1(t){const e={type:"api",api:"plugins",method:"getEntitiesDefinitionsV1",payload:{params:t}};return this.bridge.postMessage(e)}async postEntitiesExecuteDraftV1(t,e={}){const s={type:"api",api:"plugins",method:"postEntitiesExecuteDraftV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async postEntitiesExecuteV1(t,e={}){const s={type:"api",api:"plugins",method:"postEntitiesExecuteV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}}class q{bridge;constructor(t){this.bridge=t}getBridge(){return this.bridge}async getAggregatesRegistriesCountByStateV1(t={}){const e={type:"api",api:"registryAssessment",method:"getAggregatesRegistriesCountByStateV1",payload:{params:t}};return this.bridge.postMessage(e)}}class z{bridge;constructor(t){this.bridge=t}getBridge(){return this.bridge}async deleteEntitiesPutFilesV1(t){const e={type:"api",api:"remoteResponse",method:"deleteEntitiesPutFilesV1",payload:{params:t}};return this.bridge.postMessage(e)}async getEntitiesAppCommandV1(t){const e={type:"api",api:"remoteResponse",method:"getEntitiesAppCommandV1",payload:{params:t}};return this.bridge.postMessage(e)}async getEntitiesPutFilesV2(t){const e={type:"api",api:"remoteResponse",method:"getEntitiesPutFilesV2",payload:{params:t}};return this.bridge.postMessage(e)}async getQueriesPutFilesV1(t={}){const e={type:"api",api:"remoteResponse",method:"getQueriesPutFilesV1",payload:{params:t}};return this.bridge.postMessage(e)}async postEntitiesAppCommandV1(t,e={}){const s={type:"api",api:"remoteResponse",method:"postEntitiesAppCommandV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async postEntitiesAppSessionsV1(t,e={}){const s={type:"api",api:"remoteResponse",method:"postEntitiesAppSessionsV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}}class ${bridge;constructor(t){this.bridge=t}getBridge(){return this.bridge}async getQueriesUsersV1(t={}){const e={type:"api",api:"userManagement",method:"getQueriesUsersV1",payload:{params:t}};return this.bridge.postMessage(e)}async postEntitiesUsersGetV1(t,e={}){const s={type:"api",api:"userManagement",method:"postEntitiesUsersGetV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}}class W{bridge;constructor(t){this.bridge=t}getBridge(){return this.bridge}async getEntitiesExecutionResultsV1(t){const e={type:"api",api:"workflows",method:"getEntitiesExecutionResultsV1",payload:{params:t}};return this.bridge.postMessage(e)}async postEntitiesExecuteV1(t,e={}){const s={type:"api",api:"workflows",method:"postEntitiesExecuteV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}async postEntitiesExecutionActionsV1(t,e){const s={type:"api",api:"workflows",method:"postEntitiesExecutionActionsV1",payload:{body:t,params:e}};return this.bridge.postMessage(s)}}class J{api;constructor(t){this.api=t}get alerts(){return n(this.api),new B(this.api.bridge)}get detects(){return n(this.api),new x(this.api.bridge)}get devices(){return n(this.api),new F(this.api.bridge)}get fwmgr(){return n(this.api),new I(this.api.bridge)}get incidents(){return n(this.api),new K(this.api.bridge)}get mitre(){return n(this.api),new U(this.api.bridge)}get plugins(){return n(this.api),new _(this.api.bridge)}get remoteResponse(){return n(this.api),new z(this.api.bridge)}get userManagement(){return n(this.api),new $(this.api.bridge)}get workflows(){return n(this.api),new W(this.api.bridge)}get cloudSecurityAssets(){return n(this.api),new N(this.api.bridge)}get cloudregistration(){return n(this.api),new O(this.api.bridge)}get containerSecurity(){return n(this.api),new k(this.api.bridge)}get cspmRegistration(){return n(this.api),new T(this.api.bridge)}get customobjects(){return n(this.api),new M(this.api.bridge)}get faasGateway(){return n(this.api),new L(this.api.bridge)}get loggingapi(){return n(this.api),new H(this.api.bridge)}get registryAssessment(){return n(this.api),new q(this.api.bridge)}}p([j()],J.prototype,"alerts",null),p([j()],J.prototype,"detects",null),p([j()],J.prototype,"devices",null),p([j()],J.prototype,"fwmgr",null),p([j()],J.prototype,"incidents",null),p([j()],J.prototype,"mitre",null),p([j()],J.prototype,"plugins",null),p([j()],J.prototype,"remoteResponse",null),p([j()],J.prototype,"userManagement",null),p([j()],J.prototype,"workflows",null),p([j()],J.prototype,"cloudSecurityAssets",null),p([j()],J.prototype,"cloudregistration",null),p([j()],J.prototype,"containerSecurity",null),p([j()],J.prototype,"cspmRegistration",null),p([j()],J.prototype,"customobjects",null),p([j()],J.prototype,"faasGateway",null),p([j()],J.prototype,"loggingapi",null),p([j()],J.prototype,"registryAssessment",null);class Y{falcon;definition;constructor(t,e){this.falcon=t,this.definition=e}async execute({request:t}={}){return this.falcon.api.plugins.postEntitiesExecuteV1({resources:[{definition_id:this.definition.definitionId,operation_id:this.definition.operationId,request:t}]})}}class X{falcon;definition;static GET="GET";static POST="POST";static PATCH="PATCH";static PUT="PUT";static DELETE="DELETE";pollTimeout=500;intervalId;constructor(t,e){this.falcon=t,this.definition=e}async execute({path:t,method:e,body:s,params:i}){const a="id"in this.definition?{function_id:this.definition.id,function_version:this.definition.version}:{function_name:this.definition.name,function_version:this.definition.version},o=await this.falcon.api.faasGateway.postEntitiesExecutionV1({...a,payload:{path:t,method:e,body:s,params:i}});return new Promise((t,e)=>{const s=o?.resources?.[0];s?.execution_id?this.pollForResult({resolve:t,reject:e,executionId:s?.execution_id}):e(o?.errors)})}async getExecutionResult(t){const e=await this.falcon.api.faasGateway.getEntitiesExecutionV1({id:t}),s=e?.resources?.[0];return s?.payload}pollForResult({resolve:t,reject:e,executionId:s}){let i=2;this.intervalId=window.setInterval(async()=>{try{const e=await this.getExecutionResult(s);e&&(window.clearInterval(this.intervalId),t(e))}catch(t){i<=0&&(window.clearInterval(this.intervalId),e(t)),i--}},this.pollTimeout)}path(t){const e=new URL(t,"http://localhost"),s=e.pathname,i=[...e.searchParams.entries()].reduce((t,[e,s])=>({...t,[e]:[s]}),{});return{path:s,queryParams:i,get:async(t={})=>this.get({path:s,params:{query:t?.query??i??{},header:t?.header??{}}}),post:async(t,e={})=>this.post({path:s,params:{query:e?.query??i??{},header:e?.header??{}},body:t}),patch:async(t,e={})=>this.patch({path:s,params:{query:e?.query??i??{},header:e?.header??{}},body:t}),put:async(t,e={})=>this.put({path:s,params:{query:e?.query??i??{},header:e?.header??{}},body:t}),delete:async(t,e={})=>this.delete({path:s,params:{query:e?.query??i??{},header:e?.header??{}},body:t})}}async get({path:t,params:e}){return this.execute({path:t,method:X.GET,params:e})}async post({path:t,params:e,body:s}){return this.execute({path:t,method:X.POST,body:s,params:e})}async patch({path:t,params:e,body:s}){return this.execute({path:t,method:X.PATCH,body:s,params:e})}async put({path:t,params:e,body:s}){return this.execute({path:t,method:X.PUT,body:s,params:e})}async delete({path:t,params:e,body:s}){return this.execute({path:t,method:X.DELETE,body:s,params:e})}destroy(){this.intervalId&&(window.clearInterval(this.intervalId),this.intervalId=void 0)}}class Z{falcon;definition;constructor(t,e){this.falcon=t,this.definition=e}async write(t,e){return this.falcon.bridge.postMessage({type:"collection",payload:{type:"write",key:t,collection:this.definition.collection,data:e}})}async read(t){return this.falcon.bridge.postMessage({type:"collection",payload:{type:"read",key:t,collection:this.definition.collection}})}async delete(t){return this.falcon.bridge.postMessage({type:"collection",payload:{type:"delete",key:t,collection:this.definition.collection}})}async search({filter:t,offset:e,sort:s,limit:i}){return this.falcon.bridge.postMessage({type:"collection",payload:{type:"search",filter:t,limit:i,offset:e,sort:s,collection:this.definition.collection}})}async list(t){return this.falcon.bridge.postMessage({type:"collection",payload:{type:"list",collection:this.definition.collection,start:t?.start,end:t?.end,limit:t?.limit}})}}class tt{falcon;constructor(t){this.falcon=t}async write(t,e){return this.falcon.bridge.postMessage({type:"loggingapi",payload:{type:"ingest",data:t,tag:e?.tag,tagSource:e?.tagSource,testData:e?.testData}})}async query(t){return this.falcon.bridge.postMessage({type:"loggingapi",payload:{type:"dynamic-execute",data:t}})}async savedQuery(t){return this.falcon.bridge.postMessage({type:"loggingapi",payload:{type:"saved-query-execute",data:t}})}}const et=["_self","_blank"];class st{falcon;constructor(t){this.falcon=t}async navigateTo({path:t,type:e,target:s,metaKey:i,ctrlKey:a,shiftKey:o}){await this.falcon.bridge.postMessage({type:"navigateTo",payload:{path:t,type:e??"falcon",target:s??"_self",metaKey:i??0,ctrlKey:a??0,shiftKey:o??0}})}async onClick(t,e="_self",s="falcon"){if(!(t instanceof Event))throw Error('"event" property should be subclass of Event');if(!("preventDefault"in t))return;if(!(t.target instanceof HTMLAnchorElement))return;t.preventDefault();const i=t.target.getAttribute("href");e=t.target.getAttribute("target")??e;const a=t.target.dataset?.type??s;if(null===e||!et.includes(e))throw new Error("Target should be _self or _blank");const o=e;if(null==i)throw new Error("Navigation path is missing. Make sure you have added navigation.onClick on the `a` tag and `href` is present.");const{metaKey:n,ctrlKey:r,shiftKey:p}=t;await this.navigateTo({path:i,type:a,target:o,metaKey:n,ctrlKey:r,shiftKey:p})}}class it{bridge;observer;constructor(t){this.bridge=t,this.observer=new ResizeObserver(t=>this.handleResizeEvent(t)),this.observer.observe(document.body)}handleResizeEvent(t){const{height:e}=t[0].contentRect;this.bridge.sendUnidirectionalMessage({type:"resize",payload:{height:e}})}destroy(){this.observer.disconnect()}}class at{bridge;constructor(t){this.bridge=t}async openModal(t,e,s={}){const i=await this.bridge.postMessage({type:"openModal",payload:{extension:t,title:e,options:s}});if(i instanceof Error)throw i;return i}closeModal(t){this.bridge.sendUnidirectionalMessage({type:"closeModal",payload:t})}async uploadFile(t,e){return this.bridge.postMessage({type:"fileUpload",fileUploadType:t,payload:e})}}class ot{isConnected=0;events=new D;data;bridge=new r({onDataUpdate:t=>this.handleDataUpdate(t),onBroadcast:t=>this.handleBroadcastMessage(t),onLivereload:()=>this.handleLivereloadMessage()});api=new J(this);ui=new at(this.bridge);resizeTracker;cloudFunctions=[];apiIntegrations=[];collections=[];async connect(){const t=await this.bridge.postMessage({type:"connect"});if(void 0!==t){const{data:e,origin:s}=t;this.bridge.setOrigin(s),this.data=e,this.updateTheme(e?.theme),this.isConnected=1}return this.resizeTracker=new it(this.bridge),t}get appId(){return this.data?.app.id}sendBroadcast(t){this.bridge.sendUnidirectionalMessage({type:"broadcast",payload:t})}handleDataUpdate(t){this.data=t.payload,this.updateTheme(this.data.theme),this.events.emit("data",this.data)}handleBroadcastMessage(t){this.events.emit("broadcast",t.payload)}handleLivereloadMessage(){document.location.reload()}updateTheme(t){if(!t)return;const e="theme-dark"===t?"theme-light":"theme-dark";document.documentElement.classList.add(t),document.documentElement.classList.remove(e)}cloudFunction(t){n(this);const e=new X(this,t);return this.cloudFunctions.push(e),e}apiIntegration({definitionId:t,operationId:e}){if(n(this),!this.data)throw Error("Data from console is missing");const s=new Y(this,{operationId:e,definitionId:t});return this.apiIntegrations.push(s),s}collection({collection:t}){n(this);const e=new Z(this,{collection:t});return this.collections.push(e),e}get navigation(){return n(this),new st(this)}get logscale(){return n(this),new tt(this)}destroy(){this.cloudFunctions.forEach(t=>t.destroy()),this.resizeTracker?.destroy(),this.bridge.destroy()}}p([j()],ot.prototype,"navigation",null),p([j()],ot.prototype,"logscale",null);export{ot as F};